######################
### KEY BINDING    ###
######################

# nvim compatibility - fix the cursor problem
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# set prefix to Ctrl-Space
unbind C-b
set -g prefix C-Space
set -g default-terminal "rxvt-256color";
set -g mouse on
set-window-option -g mode-keys vi

# force a reload of the config file
unbind r
bind r source-file "$HOME/.tmux.conf" \; display "Reloaded tmux conf"
bind f send-keys python3 Space run.py Space --host=0.0.0.0 Space --port=8080 C-m
bind d send-keys pytest Space -svx Space

# set window split
unbind v
unbind h
unbind %
unbind '"'
bind v split-window -h -c "#{pane_current_path}"
bind h split-window -c "#{pane_current_path}"

# bind Space send-prefix
# bind Space last-window
unbind C-h
unbind C-j
unbind C-k
unbind C-l

# pane movement to window
bind j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# mouse mode
set -g mouse on

bind m \
    set -g mouse on \; \
    display 'Mouse: ON'

bind M \
    set -g mouse off \; \
    display 'Mouse: OFF'


## NAVIGATION: ############################

# Switch panes 
# Usage: "ALT+arrow keys" (without prefix key)
# from https://gist.github.com/spicycode
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
 
# Switch windows 
# usage: "SHIFT+arrow" (without prefix key)
bind -n S-Left  previous-window
bind -n S-Right next-window

# Make a smaller delay so we can perform commands after switching windows
set -sg escape-time 0
set -sg repeat-time 600

# Window title begins by 1 and not 0
set -g base-index 1
setw -g pane-base-index 1

# window management
unbind n
unbind w
bind w new-window -c "#{pane_current_path}"
bind n command-prompt "rename-window '%%'"

# panes
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# Scrollback lines
set -g history-limit 100000

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

#vim key mode
set-window-option -g mode-keys vi
unbind [
bind p paste-buffer
bind -n ¡ paste-buffer 
bind -n ¿ copy-mode

# Copy tmux copy to clipboard (need xsel - possible to use xclip as well)
unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection
unbind ]

# bind -T copy-mode-vi v send-keys -X begin-selection
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"
#for copying to sys clipboard
bind -T copy-mode-vi v send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

#bind -t vi-copy y copy-pipe "xclip -sel clip -i"
##############
### DESIGN ###
##############

## Status bar design
# status line
set -g status-justify left
#set -g status-bg default
set -g status-style fg=blue
set -g status-interval 2

# messaging
set -g message-command-style fg=blue,bg=black

# window mode
setw -g mode-style bg=green,fg=black

# window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=white] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=white] #I #[fg=white]#[bg=cyan] #W "
setw -g window-status-current-style bg=black,fg=yellow,dim
setw -g window-status-style bg=green,fg=black,reverse

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set-window-option -g monitor-activity off
set -g bell-action none

# The modes 
set-window-option -g clock-mode-colour red
set-window-option -g mode-style fg=red,bg=black,bold

#The panes 
set -g pane-border-style bg=black,fg=black
set -g pane-active-border-style fg=blue,bg=brightblack


# The statusbar 
set -g status-position bottom
set -g status-style bg=black,fg=yellow,dim
set -g status-left ''
set -g status-right '#{?client_prefix,#[fg=red]prefix pressed ..,#[fg=brightwhite]#H}'

set -g status-right-length 50
set -g status-left-length 20

# The window
set-window-option -g window-status-current-style fg=red,bg=brightblack,bold
set-window-option -g window-status-current-format ' #I#[fg=brightwhite]:#[fg=brightwhite]#W#[fg=blue]#F '

set-window-option -g window-status-style fg=magenta,bg=black,none
set-window-option -g window-status-format ' #I#[fg=colour251]:#[fg=colour251]#W#[fg=black]#F '

set-window-option -g window-status-bell-style fg=white,bg=red,bold

# The messages 
set -g message-style fg=white,bg=red,bold

###############
### PLUGINS ###
###############

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'laktak/extrakto'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b "~/.tmux/plugins/tpm/tpm" 
